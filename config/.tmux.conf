# vim: set ft=tmux:
set -g history-limit 50000
set -g status-keys vi
set -sg escape-time 0               # No delay for escape key press
set -g display-time 500
set -g status-interval 5
setw -g mode-keys vi
setw -g monitor-activity on
set -g focus-events on
set-environment -g 'IGNOREEOF' 1

# Setup mouse mode
setw -g mouse on
set -g @scroll-speed-num-lines-per-scroll "0.5"

set -g prefix C-b
bind C-b send-prefix

# 0 is too far from ` ;)
set -g base-index 1
set -wg pane-base-index 1

# Fix copy-paste
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" \; send-keys q
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" \; send-keys q
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" \; send-keys q
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Fix mac bullet (option+8)
bind M-8 send-keys •

# Automatically set window title
set -wg automatic-rename on
set -g set-titles on

# Bind split window to keys you can remember
bind C-\ split-window -h
bind C-_ split-window -v
bind \ split-window -h
bind - split-window -v

# Resize panes
bind j resize-pane -D 5
bind k resize-pane -U 5
bind h resize-pane -L 5
bind l resize-pane -R 5

# Use control + vim movement to switch panes
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mod-vi C-\ select-pane -l
# Dissabled because using vim-tmux-navigator plugin
# bind -n C-h select-pane -L
# bind -n C-j select-pane -D
# bind -n C-k select-pane -U
# bind -n C-l select-pane -R
bind C-l send-keys 'C-l'    # still allow C-l to clear screen when vim-tmux-navigator plugin is running

# Use Alt-vim keys without prefix key to switch windows
bind -n M-h previous-window
bind -n M-l next-window

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Reload tmux config
bind C-r source-file ~/.tmux.conf \; display "Config reloaded..."
bind Escape respawn-pane -k

# THEME
set-option -sa terminal-overrides ",xterm*:Tc"  # Enable RGB colour if running in xterm(1)
set -g default-terminal "tmux-256color"         # Change the default $TERM to tmux-256color
set -g status-position top
set -g status-bg black
set -g status-fg black
set -wg window-status-bg black
set -wg window-status-current-bg black
set -wg window-status-current-fg white
set -wg window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left "#[fg=brightgreen]#(whoami)@#h #[default]〉"
set -g status-right "#[fg=brightcyan]CPU: #(sysctl -n vm.loadavg | cut -d ' ' -f 3)#[default]〈 #[fg=white]%a %b %d %H:%M#[default]"
set -wg mode-style "fg=black,bg=brightblue"
set -g pane-border-bg brightblack
set -g pane-active-border-bg black
set -g pane-active-border-fg blue
set -g window-style 'bg=brightblack'
set -g window-active-style 'bg=black'

# Set neovim cursor escapes
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# List of plugins managed by https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Install TMUX plugin manager: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
