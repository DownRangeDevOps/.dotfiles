---
# yamllint disable rule:line-length
gui:
  # stuff relating to the UI
  authorColors:
    "Ryan Fisher": "#89b4fa"
    "GitHub": "#fab387"
    "*": "#b4befe"
  windowSize: "normal"  # one of "normal" | "half" | "full" default is "normal"
  scrollHeight: 8  # how many lines you scroll by
  scrollPastBottom: true  # enable scrolling past the bottom
  scrollOffMargin: 8  # how many lines to keep before/after the cursor when it reaches the top/bottom of the view; see "Scroll-off Margin" section below
  scrollOffBehavior: "margin"  # one of "margin" | "jump"; see "Scroll-off Margin" section below
  sidePanelWidth: 0.3333  # number from 0 to 1
  expandFocusedSidePanel: false
  mainPanelSplitMode: "flexible"  # one of "horizontal" | "flexible" | "vertical"
  language: "auto"  # "auto", "en", "zh-CN", "zh-TW", "pl", "nl", "ja", "ko", "ru"
  timeFormat: "02 Jan 06"  # https://pkg.go.dev/time#Time.Format
  shortTimeFormat: "3:04PM"
  theme:  # https://github.com/catppuccin/lazygit/blob/main/themes/mocha/mocha-sky.yml
    activeBorderColor:
      - "#89dceb"
      - bold
    inactiveBorderColor:
      - "#a6adc8"
    optionsTextColor:
      - "#89b4fa"
    selectedLineBgColor:
      - "#313244"
    selectedRangeBgColor:
      - "#313244"
    cherryPickedCommitBgColor:
      - "#45475a"
    cherryPickedCommitFgColor:
      - "#89dceb"
    unstagedChangesColor:
      - "#f38ba8"
    defaultFgColor:
      - "#cdd6f4"
    searchingActiveBorderColor:
      - "#f9e2af"
  commitLength:
    show: true
  mouseEvents: true
  skipDiscardChangeWarning: false
  skipStashWarning: false
  showFileTree: true  # for rendering changes files in a tree format
  showListFooter: true  # for seeing the "5 of 20" message in list panels
  showRandomTip: true
  showBranchCommitHash: true  #  show commit hashes alongside branch names, default: false
  showBottomLine: true  # for hiding the bottom information line (unless it has important information to tell you)
  showPanelJumps: true  # for showing the jump-to-panel keybindings as panel subtitles
  showCommandLog: true
  showIcons: false  # deprecated: use nerdFontsVersion instead
  nerdFontsVersion: "3"  # nerd fonts version to use ("2" or "3"); empty means don"t show nerd font icons
  commandLogSize: 8
  splitDiff: "auto"  # one of "auto" | "always"
  skipRewordInEditorWarning: false  # for skipping the confirmation before launching the reword editor
  border: "rounded"  # one of "single" | "double" | "rounded" | "hidden"
  animateExplosion: true  # shows an explosion animation when nuking the working tree
  portraitMode: "auto"  # one of "auto" | "never" | "always"
git:
  paging:
    colorArg: always
    # useConfig: false
    pager: delta --dark --paging=never
  commit:
    signOff: false
  merging:
    manualCommit: false  # only applicable to unix users
    args: ""  # extra args passed to `git merge`, e.g. --no-ff
  log:
    # one of date-order, author-date-order, topo-order or default.
    # topo-order makes it easier to read the git log graph, but commits may not
    # appear chronologically. See https://git-scm.com/docs/git-log#_commit_ordering
    order: "topo-order"
    # one of always, never, when-maximized
    # this determines whether the git graph is rendered in the commits panel
    showGraph: "when-maximised"
    # displays the whole git graph by default in the commits panel (equivalent
    # to passing the `--all` argument to `git log`)
    showWholeGraph: false
  skipHookPrefix: WIP
  # The main branches. We color commits green if they belong to one of these
  # branches, so that you can easily see which commits are unique to your
  # branch (colored in yellow)
  mainBranches:
    - master
    - main
  autoFetch: true
  autoRefresh: true
  fetchAll: true   # Pass --all flag when running git fetch. Set to false to fetch only origin (or the current branch"s upstream remote if there is one)
  branchLogCmd: "git_log_branch_no_trunc_msg"  # default: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --"
  allBranchesLogCmd: "git_log_all_branches_no_trunc_msg"  # default: "git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium"
  overrideGpg: false  # prevents LazyGit from spawning a separate process when using GPG
  disableForcePushing: false
  parseEmoji: false
os:
  copyToClipboardCmd: ""  # See "Custom Command for Copying to Clipboard" section
  editPreset: ""  # see "Configuring File Editing" section
  edit: "nvr -cc split --remote-wait-silent +'setlocal bufhidden=delete' {{filename}}"
  editAtLine: "nvr -cc split -c {{line}} --remote-wait-silent +'setlocal bufhidden=delete' {{filename}}"
  editAtLineAndWait: "nvr -cc split -c {{line}} --remote-wait-silent +'setlocal bufhidden=delete' {{filename}}"
  open: "open {{filename}}"
  openLink: ""
refresher:
  refreshInterval: 4  # File/submodule refresh interval in seconds. Auto-refresh can be disabled via option "git.autoRefresh".
  fetchInterval: 60  # Re-fetch interval in seconds. Auto-fetch can be disabled via option "git.autoFetch".
update:
  method: prompt  # can be: prompt | background | never
  days: 14  # how often an update is checked for
confirmOnQuit: false
quitOnTopLevelReturn: true # determines whether hitting "esc" will quit the application when there is nothing to cancel/close, default: false
disableStartupPopups: false
notARepository: "prompt"  # one of: "prompt" | "create" | "skip" | "quit"
promptToReturnFromSubprocess: true  # display confirmation when subprocess terminates
keybinding:
  universal:
    quit: "Q"
    quit-alt1: "<c-c>"  # alternative/alias of quit
    return: "q"  # return to previous menu, will quit if there"s nowhere to return
    quitWithoutChangingDirectory: "Q"
    togglePanel: "<tab>"  # goto the next panel
    prevItem: "k"  # go one line up
    nextItem: "j"  # go one line down
    prevItem-alt: "<up>"  # go one line up
    nextItem-alt: "<down>"  # go one line down
    prevPage: "<c-b>"  # go to next page in list, default: ","
    nextPage: "<c-f>"  # go to previous page in list, default: "."
    gotoTop: "<"  # go to top of list
    gotoBottom: ">"  # go to bottom of list
    scrollLeft: "H"  # scroll left within list view
    scrollRight: "L"  # scroll right within list view
    prevBlock: "h"  # goto the previous block / panel
    nextBlock: "l"  # goto the next block / panel
    prevBlock-alt: "<left>"  # goto the previous block / panel
    nextBlock-alt: "<right>"  # goto the next block / panel
    jumpToBlock: ["1", "2", "3", "4", "5"]  # goto the Nth block / panel
    nextMatch: "n"
    prevMatch: "N"
    optionMenu: "?"  # show help menu
    optionMenu-alt1: null # show help menu
    select: "<space>"
    goInto: "<enter>"
    openRecentRepos: "<c-r>"
    confirm: "<enter>"
    remove: "d"
    new: "n"
    edit: "e"
    openFile: "o"
    scrollUpMain: "K"  # main panel scroll up
    scrollDownMain: "J"  # main panel scroll down
    scrollUpMain-alt1: "<pgup>"
    scrollDownMain-alt1: "<pgdown>"
    scrollUpMain-alt2: "<c-u>"
    scrollDownMain-alt2: "<c-d>"
    executeCustomCommand: ":"
    createRebaseOptionsMenu: "m"
    pushFiles: "P"
    pullFiles: "p"
    refresh: "R"
    createPatchOptionsMenu: "<c-p>"
    nextTab: "]"
    prevTab: "["
    nextScreenMode: "+"
    prevScreenMode: "_"
    undo: "z"
    redo: "<c-z>"
    filteringMenu: "<c-s>"
    diffingMenu: "W"
    diffingMenu-alt: "<c-e>"  # deprecated
    copyToClipboard: "<c-o>"
    submitEditorText: "<enter>"
    extrasMenu: "@"
    toggleWhitespaceInDiffView: "<c-w>"
    increaseContextInDiffView: "}"
    decreaseContextInDiffView: "{"
  status:
    checkForUpdate: "u"
    recentRepos: "<enter>"
  files:
    commitChanges: "c"
    commitChangesWithoutHook: "w"  # commit changes without pre-commit hook
    amendLastCommit: "A"
    commitChangesWithEditor: "C"
    confirmDiscard: "x"
    ignoreFile: "i"
    refreshFiles: "r"
    stashAllChanges: "s"
    viewStashOptions: "S"
    toggleStagedAll: "a"  # stage/unstage all
    viewResetOptions: "D"
    fetch: "f"
    toggleTreeView: "`"
    openMergeTool: "M"
    openStatusFilter: "<c-b>"
  branches:
    createPullRequest: "o"
    viewPullRequestOptions: "O"
    checkoutBranchByName: "c"
    forceCheckoutBranch: "F"
    rebaseBranch: "r"
    renameBranch: "R"
    mergeIntoCurrentBranch: "M"
    viewGitFlowOptions: "i"
    fastForward: "f"  # fast-forward this branch from its upstream
    createTag: "T"
    pushTag: "P"
    setUpstream: "u"  # set as upstream of checked-out branch
    fetchRemote: "f"
  commits:
    squashDown: "s"
    renameCommit: "r"
    renameCommitWithEditor: "R"
    viewResetOptions: "g"
    markCommitAsFixup: "f"
    createFixupCommit: "F"  # create fixup commit for this commit
    squashAboveCommits: "S"
    moveDownCommit: "<c-j>"  # move commit down one
    moveUpCommit: "<c-k>"  # move commit up one
    amendToCommit: "A"
    pickCommit: "p"  # pick commit (when mid-rebase)
    revertCommit: "t"
    cherryPickCopy: "c"
    cherryPickCopyRange: "C"
    pasteCommits: "v"
    tagCommit: "T"
    checkoutCommit: "<space>"
    resetCherryPick: "<c-R>"
    copyCommitMessageToClipboard: "<c-y>"
    openLogMenu: "<c-l>"
    viewBisectOptions: "b"
  stash:
    popStash: "g"
    renameStash: "r"
  commitFiles:
    checkoutCommitFile: "c"
  main:
    toggleDragSelect: "v"
    toggleDragSelect-alt: "V"
    toggleSelectHunk: "a"
    pickBothHunks: "b"
  submodules:
    init: "i"
    update: "u"
    bulkMenu: "b"
