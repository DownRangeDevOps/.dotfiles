# vim: set ft=sh:
# Terraform helpers

# Alises
alias tf="workon terraform && terraform"
alias tfV="workon terraform && terraform version"
alias tfa="workon terraform && terraform apply"
alias tfc="workon terraform && terraform console"
alias tfd="workon terraform && terraform destroy"
alias tfdb="workon terraform && terraform debug"
alias tfe="workon terraform && terraform env"
alias tff="workon terraform && terraform fmt"
alias tffr="workon terraform && ..r && terraform fmt -recursive && cd -"
alias tfg="workon terraform && terraform get"
alias tfgr="workon terraform && terraform graph"
alias tfi="workon terraform && terraform init"
alias tfim="workon terraform && terraform import"
alias tfo="workon terraform && terraform output"
alias tfp="workon terraform && terraform plan"
alias tfpu="workon terraform && terraform push"
alias tfpv="workon terraform && terraform providers"
alias tfr="workon terraform && terraform refresh"
alias tfs="workon terraform && terraform show"
alias tft="workon terraform && terraform taint"
alias tfu="workon terraform && terraform untaint"
alias tfug="workon terraform && terraform 0.12upgrade"
alias tful="workon terraform && terraform force-unlock"
alias tfv="workon terraform && terraform validate"
alias tfw="workon terraform && terraform workspace"

# Helpers
function find_all_terraform_modules() {
    find . -path '*/.terraform' -prune -o -type f -iname "main.tf" -print0 \
        | xargs dirname
}

function init_all_modules() {
    ALL_MODULES=find_all_terraform_modules

    for module in ${ALL_MODULES};
        do
            printf "%s\n" "${module}"
            (cd "${module}" && terraform init)
        done
}

function validate_all_modules() {
    ALL_MODULES=find_all_terraform_modules

    for module in ${ALL_MODULES};
        do
            printf "%s\n" "${module}"
            (cd "${module}" && terraform validate)
        done
}
 alias tfia=init_all_modules
 alias tfva=validate_all_modules
